version: 2.1

executors:
  cpp-executor:
    machine:
      image: ubuntu-2204:current
    working_directory: ~/tech-template

jobs:
  clang-format-check:
    executor: cpp-executor
    steps:
      - checkout
      - run:
          name: Install Clang Format
          command: |
            sudo apt-get update
            sudo apt-get install -y clang-format
      - run:
          name: Run Clang Format Check
          command: |
            FORMAT_DIFF=$(find . -regex '.*\.\(cpp\|hpp\|cc\|cxx\|c\|h\)' -exec clang-format-14 --dry-run --Werror {} + || true)
            if [ -n "$FORMAT_DIFF" ]; then
              echo "Clang-format check failed. Run 'clang-format-14 -i <file>' to fix formatting."
              echo "$FORMAT_DIFF"
              exit 1
            fi

  clang-tidy-check:
    executor: cpp-executor
    steps:
      - checkout
      - run:
          name: Install Clang-Tidy and Tools
          command: |
            sudo apt-get update
            sudo apt-get install -y clang-tidy cmake build-essential ninja-build
      - run:
          name: Bootstrap vcpkg
          command: ./vcpkg/bootstrap-vcpkg.sh
      - run:
          name: Install vcpkg Dependencies
          command: ./vcpkg/vcpkg install
      - run:
          name: Create Compilation Database
          command: |
            cmake -B build -G Ninja \
              -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
              -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake
      - run:
          name: Run Clang-Tidy
          command: |
            find . -not -path "./vcpkg/*" \( -name '*.cpp' -o -name '*.hpp' \) | xargs clang-tidy -p build

  build-and-test:
    executor: cpp-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - vcpkg-modules-v1-{{ checksum "vcpkg.json" }}
            - vcpkg-modules-v1-
      - run:
          name: Install System Dependencies
          command: |
            sudo apt-get update
            DEBIAN_FRONTEND=noninteractive sudo apt-get install -y cmake clang clang-tidy clang-format lcov ninja-build pkg-config llvm
      - run:
          name: Setup vcpkg
          command: |
            if [ ! -d "vcpkg" ]; then
              git submodule add https://github.com/microsoft/vcpkg.git
            fi
            git submodule update --init --recursive
      - run:
          name: Bootstrap vcpkg
          command: ./vcpkg/bootstrap-vcpkg.sh
      - run:
          name: Install vcpkg Dependencies
          command: ./vcpkg/vcpkg install --triplet=x64-linux
      - run:
          name: Configure Project
          command: |
            cmake -B build -S . \
              -DCMAKE_TOOLCHAIN_FILE=./vcpkg/scripts/buildsystems/vcpkg.cmake \
              -DCMAKE_CXX_COMPILER=clang++ \
              -DENABLE_COVERAGE=ON \
              -DCMAKE_BUILD_TYPE=Debug \
              -DCMAKE_EXPORT_COMPILE_COMMANDS=ON \
              -G Ninja
      - run:
          name: Build Project
          command: |
            mkdir -p build/test_results
            cd build
            ninja
      - run:
          name: Run Unit Tests and Store Results
          command: |
            cd build
            ctest --output-on-failure --test-output-size-passed | tee test_results/ctest_output.log
            ctest --test-output-size-passed --gtest_output=xml:test_results/gtest_results.xml || echo "No GTest XML output found."
      - run:
          name: Generate Coverage Report
          command: |
            cd build
            llvm-cov gcov $(find . -name "*.gcno")
      - run:
          name: Upload Coverage Report
          command: |
            bash <(curl -s https://codecov.io/bash) -t ${CODECOV_TOKEN}
      - save_cache:
          key: vcpkg-modules-v1-{{ checksum "vcpkg.json" }}
          paths:
            - ~/.cache/vcpkg/archives
            - ./vcpkg/installed

workflows:
  version: 2
  build-test-analyze:
    jobs:
      - clang-format-check
      - clang-tidy-check:
          requires:
            - clang-format-check
      - build-and-test:
          requires:
            - clang-tidy-check
